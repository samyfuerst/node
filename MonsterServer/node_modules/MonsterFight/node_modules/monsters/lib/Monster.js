var help=require('./Help');

function Monster(attackOrder) {
    "use strict";
    this._attackOrder = attackOrder;
    this._attacks=help.calculateAttacks(20,12,attackOrder);
}

var util=require('util');
var events=require('events');
util.inherits(Monster, events.EventEmitter);

Monster.prototype._sound=null;
Monster.prototype._attackOrder=null;
Monster.prototype._attacks=null;
Monster.prototype._health=5;
Monster.prototype.name=null;


Monster.prototype.getHealth=function(){
    return this._health;
};

/*
Monster.prototype.growl=function(){
    console.log(this._sound);
}
*/

Monster.prototype.attack=function(victim){
    this.emit('growl',this._sound);
    var ap=0;
    if (this._attackOrder.length>0){
        var currentAttack=this._attacks[this._attackOrder[0]];
        if (typeof currentAttack != 'undefined')
            ap=currentAttack[0];
        this._attackOrder.shift();
    }   
    this.emit('attack',victim.name,ap);
    victim.defend(ap);
    
    
}
Monster.prototype.defend=function(attackPoints){
    if (this._attackOrder.length>0){
        var currentAttack=this._attacks[this._attackOrder[0]];
            if (typeof currentAttack != 'undefined'){
                attackPoints-=currentAttack[1];
                if (attackPoints<=0){
                    this.emit('defend',this.name);
                    return;
                }
            }
        this._attackOrder.shift();
    }
        
    if (this._health-attackPoints<=0){
        this.emit('die',this.name);
        return;
    }
    
    this._health-=attackPoints;
    

    this.emit('hit',attackPoints);
    
};

module.exports = Monster;